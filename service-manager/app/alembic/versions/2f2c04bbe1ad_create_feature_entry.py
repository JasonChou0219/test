"""Create Feature entry

Revision ID: 2f2c04bbe1ad
Revises: d4867f3a4c0a
Create Date: 2022-03-18 21:33:30.392499

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2f2c04bbe1ad'
down_revision = 'd4867f3a4c0a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('service_info',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=200), nullable=True),
    sa.Column('parsed_ip_address', sa.String(length=200), nullable=True),
    sa.Column('port', sa.String(length=200), nullable=True),
    sa.Column('uuid', sa.String(length=200), nullable=True),
    sa.Column('version', sa.String(length=200), nullable=True),
    sa.Column('server_name', sa.String(length=200), nullable=True),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('favourite', sa.Boolean(), nullable=True),
    sa.Column('isGateway', sa.Boolean(), nullable=True),
    sa.Column('feature_names', sa.String(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('owner', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_service_info_id'), 'service_info', ['id'], unique=False)
    op.create_index(op.f('ix_service_info_server_name'), 'service_info', ['server_name'], unique=False)
    op.create_index(op.f('ix_service_info_uuid'), 'service_info', ['uuid'], unique=True)
    op.create_table('features',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_uuid', sa.String(length=200), nullable=True),
    sa.Column('category', sa.String(length=200), nullable=True),
    sa.Column('feature_version', sa.String(length=200), nullable=True),
    sa.Column('maturity_level', sa.String(length=200), nullable=True),
    sa.Column('originator', sa.String(length=200), nullable=True),
    sa.Column('sila2_version', sa.String(length=200), nullable=True),
    sa.Column('identifier', sa.String(length=200), nullable=True),
    sa.Column('display_name', sa.String(length=200), nullable=True),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('locale', sa.String(length=200), nullable=True),
    sa.Column('commands', sa.JSON(), nullable=True),
    sa.Column('properties', sa.JSON(), nullable=True),
    sa.Column('errors', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['owner_uuid'], ['service_info.uuid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_features_id'), 'features', ['id'], unique=False)
    op.create_index(op.f('ix_features_identifier'), 'features', ['identifier'], unique=False)
    op.drop_index('ix_service_service_uuid', table_name='service')
    op.create_index(op.f('ix_service_service_uuid'), 'service', ['service_uuid'], unique=False)
    op.alter_column('user', 'email',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('user', 'hashed_password',
               existing_type=sa.VARCHAR(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user', 'hashed_password',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('user', 'email',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_index(op.f('ix_service_service_uuid'), table_name='service')
    op.create_index('ix_service_service_uuid', 'service', ['service_uuid'], unique=False)
    op.drop_index(op.f('ix_features_identifier'), table_name='features')
    op.drop_index(op.f('ix_features_id'), table_name='features')
    op.drop_table('features')
    op.drop_index(op.f('ix_service_info_uuid'), table_name='service_info')
    op.drop_index(op.f('ix_service_info_server_name'), table_name='service_info')
    op.drop_index(op.f('ix_service_info_id'), table_name='service_info')
    op.drop_table('service_info')
    # ### end Alembic commands ###
